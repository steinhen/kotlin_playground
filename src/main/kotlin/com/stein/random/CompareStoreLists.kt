package com.stein.random

import org.apache.http.HttpHeaders
import org.apache.http.impl.client.HttpClientBuilder
import org.apache.http.message.BasicHeader
import org.apache.solr.client.solrj.SolrQuery
import org.apache.solr.client.solrj.impl.HttpSolrClient
import org.apache.solr.common.SolrDocument
import org.apache.solr.common.util.Base64
import kotlin.streams.toList

fun main() {

    val allStatus30 = mutableMapOf<String, String>()
    val emptyStoreData = mutableMapOf<String, String>()

//    val input = listOf(
//        180585,
//        24159,
//        22015,
//        21784
//    )

    input.forEach { subsys ->
        val response = solrClient.query(
            "betty-evaluate-bundles",
            SolrQuery("""SubsysIDs: $subsys AND articleId: BTY-X* AND country: DE""")
        )

        for (doc in response.results.iterator()) {
            val storeIds = doc.getList("storeIds")
            val status30 = doc.getList("status30")

            val uniqueKey = doc.getString("uniqueBundleKey")
            if (storeIds == status30) {
                val subsysId = doc.getString("SubsysIDs")
                if (status30.isNotEmpty()) {
                    println("$uniqueKey all store status 30")
                    allStatus30[uniqueKey] = subsysId
                } else {
                    println("$uniqueKey empty store data")
                    emptyStoreData[uniqueKey] = subsysId
                }

            } else {
                println("$uniqueKey contains active stores")
            }
        }
    }
    println("allStatus30 = $allStatus30")
    println("emptyStoreData = $emptyStoreData")
}

fun SolrDocument.getString(key: String) = this[key].toString()

fun SolrDocument.getList(key: String) =
    if (this.containsKey(key))
        (this[key] as List<*>).stream().sorted().toList()
    else
        emptyList()

val input = listOf<Long>(
    180585,
    24159,
    22015,
    21784,
    19689,
    18472,
    17241,
    454472,
    326963,
    310725,
    306805,
    306791,
    306701,
    306649,
    306648,
    297936,
    297108,
    294729,
    292043,
    291765,
    287848,
    281343,
    271854,
    2644,
    264023,
    240526,
    238275,
    220082,
    220050,
    209449,
    209225,
    186904,
    168954,
    163615,
    129214,
    119166,
    50609,
    49594,
    48774,
    47438,
    47416,
    47347,
    24970,
    12634,
    12025,
    11966,
    10591,
    7809,
    7550,
    564830,
    559861,
    534225,
    523315,
    514750,
    514739,
    409327,
    328173,
    327002,
    325934,
    282156,
    275387,
    275371,
    267974,
    267503,
    267479,
    264288,
    261846,
    227318,
    156917,
    141009,
    97693286,
    116302160,
    25,
    24,
    817425,
    23197,
    7108,
    518601,
    451095,
    86989,
    86810,
    86667,
    84188,
    663909,
    60420,
    64817,
    64797,
    349318,
    349305,
    226070,
    72304,
    72301,
    57007,
    23750,
    544785,
    306676,
    306646,
    306644,
    306642,
    302290,
    301529,
    300766,
    299806,
    299368,
    299330,
    299102,
    298740,
    296932,
    296537,
    296517,
    296485,
    296483,
    295519,
    295481,
    295070,
    295034,
    294971,
    294753,
    294751,
    294734,
    294730,
    292489,
    292449,
    292355,
    292026,
    290624,
    290622,
    290354,
    290352,
    288640,
    2886148,
    288585,
    288193,
    288180,
    287265,
    287251,
    286295,
    286211,
    285755,
    285752,
    285751,
    285575,
    284672,
    284660,
    284599,
    283737,
    283623,
    282617,
    264065,
    263989,
    262729,
    262318,
    262066,
    249900,
    250808,
    255553,
    244821,
    244814,
    243685,
    233258,
    233211,
    162351,
    154793,
    147316,
    47320,
    47265,
    15270,
    14544,
    14508,
    12018,
    11981,
    11980,
    11970,
    9054,
    9051,
    9043,
    9037,
    8592,
    7846,
    7811,
    7776,
    7608,
    578470,
    561935,
    560057,
    551040,
    529710,
    493235,
    409328,
    285229,
    285223,
    282603,
    282232,
    282147,
    282073,
    281776,
    281424,
    281219,
    281209,
    278900,
    278708,
    278377,
    27322320,
    272,
    271668,
    271663,
    271543,
    270075,
    269936,
    268924,
    268913,
    268845,
    268821,
    268809,
    268603,
    267088,
    266124,
    266101,
    266071,
    266054,
    266029,
    265746,
    265742,
    265730,
    265713,
    264290,
    264280,
    264219,
    264200,
    264198,
    264194,
    263418,
    263414,
    263412,
    237241,
    21285170,
    17583,
    237241,
    21281070,
    17583,
    371811,
    1445,
    85386,
    326369,
    295272,
    285431,
    531830,
    131819,
    450266,
    450253,
    111746,
    111171,
    54160,
    54150,
    192355,
    108211,
    108161,
    345070,
    345068,
    498364,
    600318,
    294253,
    293666,
    4887,
    2784,
    161069,
    148631,
    458494,
    423318,
    297160,
    239053,
    237742,
    194656,
    13330,
    607843,
    519982,
    519981,
    519980,
    519978,
    519972,
    455747,
    431256,
    358784,
    337495,
    281436,
    281430,
    268116,
    268116,
    268116,
    263505,
    188734,
    180081,
    141003,
    89669,
    83185,
    45906,
    355553,
    188546,
    315536,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    67628,
    241839,
    241040,
    8394265713,
    264290,
    264280,
    264219,
    264200,
    264198,
    264194,
    263418,
    263414,
    263412,
    237241,
    211070,
    17583,
    461308,
    432851,
    371811,
    1445,
    85386,
    326369,
    295272,
    285431,
    531830,
    131819,
    450,
    111746,
    111171,
    54160,
    54150,
    192355,
    108211,
    108161,
    345070,
    345068,
    498364,
    600318,
    294253,
    293666,
    48878,
    599370,
    2784,
    161069,
    148631,
    458494,
    423318,
    297160,
    239053,
    237742,
    194656,
    607843,
    519982,
    519981,
    519980,
    519978,
    519972,
    455747,
    431256,
    358784,
    337495,
    281436,
    281430,
    268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    89669,
    83185,
    45906,
    355553,
    1885,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    67628,
    241839,
    241040,
    839434,
    110834265713,
    264290,
    264280,
    264219,
    264200,
    264198,
    264194,
    263418,
    263414,
    263412,
    237241,
    211070,
    17583,
    461308,
    432851,
    371811,
    1445,
    85386,
    326369,
    295272,
    285431,
    531830,
    131819,
    450,
    111746,
    111171,
    54160,
    54150,
    192355,
    108211,
    108161,
    345070,
    345068,
    498364,
    600318,
    294253,
    293666,
    48878,
    599370,
    2784,
    161069,
    148631,
    458494,
    423318,
    297160,
    239053,
    237742,
    194656,
    607843,
    519982,
    519981,
    519980,
    519978,
    519972,
    455747,
    431256,
    358784,
    337495,
    281436,
    281430,
    268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    89669,
    83185,
    45906,
    355553,
    1885,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    67628,
    241839,
    241040,
    839434,
    110834531830,
    131819,
    450266,
    450253,
    111746,
    111171,
    54160,
    54150,
    192355,
    108211,
    108161,
    345070,
    345068,
    498364,
    600318,
    294253,
    293666,
    48878,
    599370,
    2784,
    16101869,
    298631,
    458494,
    4233,
    239053,
    237742,
    194656,
    13330,
    607843,
    519982,
    519981,
    519980,
    519978,
    519972,
    455747,
    431256,
    358784,
    337495,
    281436,
    281430,
    268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    895669,
    45906,
    355553,
    188546,
    315536,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    67628,
    241839,
    241040,
    839434,
    110834531830,
    131819,
    450266,
    450253,
    111746,
    111171,
    54160,
    54150,
    192355,
    108211,
    108161,
    345070,
    345068,
    498364,
    600318,
    294253,
    293666,
    48878,
    599370,
    2784,
    16101869,
    298631,
    458494,
    4233,
    239053,
    237742,
    194656,
    13330,
    607843,
    519982,
    519981,
    519980,
    519978,
    519972,
    455747,
    431256,
    358784,
    337495,
    281436,
    281430,
    268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    895669,
    45906,
    355553,
    188546,
    315536,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    67628,
    241839,
    241040,
    839434,
    110834268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    89669,
    83185,
    45906,
    355553,
    188546,
    315536,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    671839,
    23215,
    40420,
    671839,
    241040,
    839434,
    110834268116,
    268115,
    267555,
    263505,
    188734,
    180081,
    141003,
    89669,
    83185,
    45906,
    355553,
    188546,
    315536,
    315176,
    87168,
    86748,
    313186,
    526473,
    345509,
    345481,
    338728,
    23215,
    40420,
    671839,
    23215,
    40420,
    671839,
    241040,
    839434,
    110834
)
const val user = "solr"
const val password = "wHFIs0zLuu1a97x1nQO0GRMAzfwPWr1y"
val token: String = Base64.byteArrayToBase64("$user:$password".encodeToByteArray())

val solrClient: HttpSolrClient = HttpSolrClient.Builder()
    .withHttpClient(
        HttpClientBuilder.create()
            .setDefaultHeaders(
                listOf(
                    BasicHeader(HttpHeaders.AUTHORIZATION, "Basic $token")
                )
            )
            .build()
    )
    .withBaseSolrUrl("https://lb-solr-btevx-live5-mcc-be-gcw1.metroscales.io:8080/solr")
    .build()